cpu：
   运行/执行进程、处理数据
   cpu按照时间片循环处理进程
   cpu个数/核心数: 1 2 4 6 8 16 32 64 128 256
   加多个cpu

memory
   临时存放正在运行进程、数据   
   从硬盘调用数据到内存,cpu从内存调用数据
   缓存数据
   加大内存

hard disk:
   程序、软件的存放位置
   永久存放数据: 存放操作系统、软件、程序、数据等
   硬盘是一个半电子半机械的设备

   加多个硬盘
   硬盘的问题不是容量是IO
   计算机瓶颈: 数据从硬盘到内存有个IO的概念,即,输入输出:
               1.为什么会慢?
                 a.硬盘到内存的通道慢
                 b.硬盘本身慢

                   命令:
                   top：
                      1.cpu对于长时间不运行的进程,会将其状态置为sleeping
                      2.cpu轮询处理进程的时候,不会处理sleeping状态进程 
                                         
               2.如何提高?

程序运行于操作系统之上

计算机工作的时候：
1.先将硬盘上的程序放到／调到内存中（调入内存中的程序叫进程）
2.然后内存中的进程会被cpu执行

1颗cpu如何运行多个进程?

微观上看实际只有一个进程在运行,宏观上看多个进程同时在运行

cpu的时间花费在调度上/上下文切换上/现场保留上
有效工作时间:真正处理进程的时间
调度时间: 1.cpu将当前进程暂停同时将其运行/处理状态放入内存
          2.从内存中将进程的状态重新调回cpu并处理
          cpu处理多个进程/cpu数量小于进程的数量时,每个进程处理的时间是有限制的,如,现在有2个进程正在运行:
          cpu正在处理进程1,当时间到达时,将当前正在处理的进程1暂停,保存当前进程1的状态到内存中;
          然后处理进程2,当时间到达时,将当前正在处理的进程2暂停,保存当前进程2的状态到内存中;
          接下来将之前保存在内存中进程1的状态重新调回cpu,然后开始运行/处理进程1,
          当时间到达时,循环上面的状态,直到处理完毕


进程的处理进度
多cpu的好处减少上下文切换,即,同时处理的进程数量多,减少cpu和内存之间来回切换
并发量大:




