## 空列表与None区别:
## x == [] and x == None
http://blog.csdn.net/sasoritattoo/article/details/12451359#


In [36]: x = []

In [37]: y = None 

In [38]: type(x)  
Out[38]: list

In [39]: type(y)
Out[39]: NoneType

In [40]: x == y
Out[40]: False

In [41]: x == True
Out[41]: False

In [42]: y == True
Out[42]: False

In [49]: x == False
Out[49]: False

In [50]: y == False      
Out[50]: False

In [43]: x is None
Out[43]: False

In [44]: y is None
Out[44]: True


## not 不管后面是字符串、列表、元组、字典,返回结果是布尔型
## x,y是Fale,取反就变成True
In [45]: not x
Out[45]: True

In [46]: not y
Out[46]: True

In [47]: not x is None
Out[47]: True

In [48]: not y is None
Out[48]: False


也许你是想判断x是否为None，但是却把`x==[]`的情况也判断进来了，此种情况下将无法区分。
对于习惯于使用if not x这种写法的pythoner，必须清楚x等于None,  False, 空字符串"", 0, 空列表[], 空字典{}, 空元组()时对你的判断没有影响才行。 
而对于`if x is not None`和`if not x is None`写法，很明显前者更清晰，而后者有可能使读者误解为`if (not x) is None`，因此推荐前者，同时这也是谷歌推荐的风格

结论：
1.if x is not None`是最好的写法，清晰，不会出现错误，以后坚持使用这种写法。
2.使用if not x这种写法的前提是：必须清楚x等于None,  False, 空字符串"", 0, 空列表[], 空字典{}, 空元组()时对你的判断没有影响才行
3.不过这并不适用于变量是函数的情况，以下转载自：https://github.com/wklken/stackoverflow-py-top-qa/blob/master/contents/qa-control-flow.md
4.if x is not None == if not (x is None)
5.if x: print 'ok' == if not (x is False): print 'ok'



foo is None 和 foo == None的区别


if foo is None: pass
if foo == None: pass
如果比较相同的对象实例，is总是返回True 而 == 最终取决于 "eq()"

>>> class foo(object):
    def __eq__(self, other):
        return True

>>> f = foo()
>>> f == None
True
>>> f is None
False

>>> list1 = [1, 2, 3]
>>> list2 = [1, 2, 3]
>>> list1==list2
True
>>> list1 is list2
False
另外

(ob1 is ob2) 等价于 (id(ob1) == id(ob2))

################################################################################
补充，2013.10.09
转自http://zhidao.baidu.com/question/514056244.html
python中的not具体表示是什么，举个例子说一下，衷心的感谢
 在python中not是逻辑判断词，用于布尔型True和False，not True为False，not False为True，以下是几个常用的not的用法：
(1) not与逻辑判断句if连用，代表not后面的表达式为False的时候，执行冒号后面的语句。比如：
a = False
if not a:   (这里因为a是False，所以not a就是True)
    print "hello"
这里就能够输出结果hello
(2) 判断元素是否在列表或者字典中，if a not in b，a是元素，b是列表或字典，这句话的意思是如果a不在列表b中，那么就执行冒号后面的语句，比如：
a = 5
b = [1, 2, 3]
if a not in b:
    print "hello"
这里也能够输出结果hello

not x     意思相当于     if x is false, then True, else False
