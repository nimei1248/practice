                                 第10章  索引的设计和使用
2017-1-19 22:53
索引是数据库中用来提高性能的最常用工具

本章主要介绍了MySQL 5.0支持的索引类型, 并简单介绍了索引的设计原则。
在后面的优化篇中,将会对索引做更多的介绍


10.1 索引概述
1.所有 MySQL 列类型都可以被索引,对相关列使用索引是提高 SELECT 操作性能的最佳途径
2.根据存储引擎可以定义每个表的最大索引数和最大索引长度,每种存储引擎(如 MyISAM、 InnoDB、BDB、MEMORY等)
    对每个表至少支持 16 个索引,总索引长度至少为 256 字节。 大多数存储引擎有更高的限制。
3.MyISAM 和 InnoDB 存储引擎的表默认创建的都是 BTREE 索引
4.MySQL 目前还不支持函数索引,但是支持前缀索引,即对索引字段的前 N 个字符创建索引
    前缀索引的长度跟存储引擎相关,对于 MyISAM 存储引擎的表,索引的前缀长度可以达到 1000 字节,
    而对于 InnoDB 存储引擎的表,索引的前缀长度最长是 767 字节
    请注意前缀的限制应以字节为单位进行测量,而CREATE TABLE语句中的前缀长度解释为字符数,
    在为使用多字节字符集的 列 指定前缀长度时一定要加以考虑。
5.MySQL 中还支持全文本(FULLTEXT)索引,该索引可用于全文搜索
    a.但是当前最新版 本中(5.0)只有 MyISAM 存储引擎支持 FULLTEXT 索引,并且只限于 CHAR、VARCHAR 和 TEXT 列
    b.索引总是对整个列进行的,不支持局部(前缀)索引
6.也可以为空间列类型创建索引,但是只有 MyISAM 存储引擎支持空间类型索引,且索引的字段必须是非空的
7.默认情况下,MEMORY 存储引擎使用 HASH 索引,但也支持 BTREE 索引
8.索引在创建表的时候可以同时创建,也可以随时增加新的索引

创建新索引的语法为:
5.7:
mysql> help create index
Name: 'CREATE INDEX'
Description:
Syntax:
CREATE [UNIQUE|FULLTEXT|SPATIAL] INDEX index_name
    [index_type]
    ON tbl_name (index_col_name,...)
    [index_option]
    [algorithm_option | lock_option] ...

index_col_name:
    col_name [(length)] [ASC | DESC]

index_type:
    USING {BTREE | HASH}

index_option:
    KEY_BLOCK_SIZE [=] value
  | index_type
  | WITH PARSER parser_name
  | COMMENT 'string'

algorithm_option:
    ALGORITHM [=] {DEFAULT|INPLACE|COPY}

lock_option:
    LOCK [=] {DEFAULT|NONE|SHARED|EXCLUSIVE}

CREATE INDEX is mapped to an ALTER TABLE statement to create indexes.
See [HELP ALTER TABLE]. CREATE INDEX cannot be used to create a PRIMARY
KEY; use ALTER TABLE instead. For more information about indexes, see
http://dev.mysql.com/doc/refman/5.7/en/mysql-indexes.html.

URL: http://dev.mysql.com/doc/refman/5.7/en/create-index.html



mysql>use test;
mysql>drop table country;
mysql> create table country (country_id smallint unsigned not null auto_increment, country varchar(50) not null, last_update timestamp not null default current_timestamp on update current_timestamp, primary key (country_id) ) engine=innodb default charset=utf8;
Query OK, 0 rows affected (0.02 sec)

mysql>drop table city;
mysql> create table city (city_id smallint unsigned not null auto_increment, city varchar(50) not null, country_id smallint unsigned not null, last_update timestamp not null default current_timestamp on update current_timestamp, primary key (city_id), key idx_fk_country_id (country_id), constraint `fk_city_country` foreign key (country_id) references country (country_id) on delete restrict on update cascade ) engine=innodb default charset=utf8;
Query OK, 0 rows affected (0.02 sec)



mysql> desc country;
+-------------+----------------------+------+-----+-------------------+-----------------------------+
| Field       | Type                 | Null | Key | Default           | Extra                       |
+-------------+----------------------+------+-----+-------------------+-----------------------------+
| country_id  | smallint(5) unsigned | NO   | PRI | NULL              | auto_increment              |
| country     | varchar(50)          | NO   |     | NULL              |                             |
| last_update | timestamp            | NO   |     | CURRENT_TIMESTAMP | on update CURRENT_TIMESTAMP |
+-------------+----------------------+------+-----+-------------------+-----------------------------+
3 rows in set (0.00 sec)

mysql> desc city;
+-------------+----------------------+------+-----+-------------------+-----------------------------+
| Field       | Type                 | Null | Key | Default           | Extra                       |
+-------------+----------------------+------+-----+-------------------+-----------------------------+
| city_id     | smallint(5) unsigned | NO   | PRI | NULL              | auto_increment              |
| city        | varchar(50)          | NO   |     | NULL              |                             |
| country_id  | smallint(5) unsigned | NO   | MUL | NULL              |                             |
| last_update | timestamp            | NO   |     | CURRENT_TIMESTAMP | on update CURRENT_TIMESTAMP |
+-------------+----------------------+------+-----+-------------------+-----------------------------+
4 rows in set (0.01 sec)


mysql> insert into country (country,last_update) values ('Afghanistan','2017-01-17 14:45:00');
Query OK, 1 row affected (0.00 sec)
mysql> insert into country (country,last_update) values ('China','2017-01-20 14:45:00');
Query OK, 1 row affected (0.01 sec)


mysql> select * from country;
+------------+-------------+---------------------+
| country_id | country     | last_update         |
+------------+-------------+---------------------+
|          1 | Afghanistan | 2017-01-17 14:45:00 |
|          3 | China       | 2017-01-20 14:45:00 |
+------------+-------------+---------------------+
2 rows in set (0.00 sec)


mysql> insert into city (city,country_id,last_update) values ('Kabul',1,'2017-01-17 14:46:00');
Query OK, 1 row affected (0.00 sec)
mysql> insert into city (city,country_id,last_update) values ('BJ',3,'2017-01-20 14:46:00');
Query OK, 1 row affected (0.01 sec)



mysql> select * from city;
+---------+-------+------------+---------------------+
| city_id | city  | country_id | last_update         |
+---------+-------+------------+---------------------+
|       1 | Kabul |          1 | 2017-01-17 14:46:00 |
|       3 | BJ    |          3 | 2017-01-20 14:46:00 |
+---------+-------+------------+---------------------+
2 rows in set (0.00 sec)




解析查询sql看看是否走索引
mysql> explain select * from city where city='BJ'\G
*************************** 1. row ***************************
           id: 1
  select_type: SIMPLE
        table: city
   partitions: NULL
         type: ALL
possible_keys: NULL
          key: NULL
      key_len: NULL
          ref: NULL
         rows: 2
     filtered: 50.00
        Extra: Using where
1 row in set, 1 warning (0.00 sec)



创建索引
mysql> create index cityname on city (city(10));
Query OK, 0 rows affected (0.03 sec)
Records: 0  Duplicates: 0  Warnings: 0


查看索引
mysql> show create table city\G
*************************** 1. row ***************************
       Table: city
Create Table: CREATE TABLE `city` (
  `city_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `city` varchar(50) NOT NULL,
  `country_id` smallint(5) unsigned NOT NULL,
  `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`city_id`),
  ## 索引名称
  KEY `idx_fk_country_id` (`country_id`),
  ## 索引名称
  KEY `cityname` (`city`(10)),
  CONSTRAINT `fk_city_country` FOREIGN KEY (`country_id`) REFERENCES `country` (`country_id`) ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8
1 row in set (0.00 sec)

mysql> explain select * from city where city='BJ'\G
*************************** 1. row ***************************
           id: 1
  select_type: SIMPLE
        table: city
   partitions: NULL
         type: ref
possible_keys: cityname
          key: cityname
      key_len: 32
          ref: const
         rows: 1
     filtered: 100.00
        Extra: Using where
1 row in set, 1 warning (0.00 sec)



mysql> explain select * from city where country_id=3\G
*************************** 1. row ***************************
           id: 1
  select_type: SIMPLE
        table: city
   partitions: NULL
         type: ref
possible_keys: idx_fk_country_id
          key: idx_fk_country_id
      key_len: 2
          ref: const
         rows: 1
     filtered: 100.00
        Extra: NULL
1 row in set, 1 warning (0.00 sec)



索引的删除语法为:
DROP INDEX index_name ON tbl_name
例如,想要删除 city 表上的索引 cityname,可以操作如下:


mysql> drop index cityname on city;
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> show create table city\G
*************************** 1. row ***************************
       Table: city
Create Table: CREATE TABLE `city` (
  `city_id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,
  `city` varchar(50) NOT NULL,
  `country_id` smallint(5) unsigned NOT NULL,
  `last_update` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`city_id`),
  KEY `idx_fk_country_id` (`country_id`),
  CONSTRAINT `fk_city_country` FOREIGN KEY (`country_id`) REFERENCES `country` (`country_id`) ON UPDATE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8
1 row in set (0.00 sec)

mysql> explain select * from city where city='BJ'\G
*************************** 1. row ***************************
           id: 1
  select_type: SIMPLE
        table: city
   partitions: NULL
         type: ALL
possible_keys: NULL
          key: NULL
      key_len: NULL
          ref: NULL
         rows: 2
     filtered: 50.00
        Extra: Using where
1 row in set, 1 warning (0.00 sec)


