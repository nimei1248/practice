GTID和传统复制的切换

gtid_mode几种状态：
1.OFF  不产生GTID，基于binlog+position，slave也不能接受GTID的日志
2.OFF_PERMISSIVE  不产生GTID，但作为slave可以识别GTID事务，也可识别非GTID事务
3.ON_PERMISSIVE  产生GTID事务，slave可以处理GTID事务和非GTID事务
4.ON  产生GTID事务，slave只接受GTID事务

目前的环境：
11.100  3306  GTID
11.101  3306  GTID

实验一：把GTID的环境切换成非GTID／传统复制
流程：
禁用GTID
1.停掉复制，禁止master_auto_position
   stop slave {for channel ‘channel’};
   change master to master_auto_position = 0,master_log_file = file,master_log_pos = position {for channel ‘channel’};
   start slave {for channel ‘channel’};

停止slave前确认：
show slave status\G
查看:
1.exec_master_log_pos (change master to master_log_pos推荐用此参数) = read_master_log_pos
2.master_log_file = relay_maser_log_file (change master to master_log_file推荐使用此参数)

stop slave;
show slave status\G 保留下输出信息
编写change master to语句
还是GTID复制，但不使用它的自动同步的功能
change master to master_host=‘’, master_user=‘’, master_password=‘’, master_port=, master_log_file=‘’, master_log_pos=, master_auto_position=0;
show slave status\G
start slave;
show slave status\G
测试数据是否有变化

2.更改日志格式
先改成可以处理gtid，也可以不处理gtid模式，在主、从库上
set @@global.gtid_mode = on_permissive;
改成此模式后，产生的日志还是gtid的
show master status;
create table t1;
show master status;
可以看出gtid还是会变化

接下来在master上将gtid的模式改成不产生gtid模式，off_permissive
set @@global.gtid_mode = off_permissive;  会执行flush_logs;产生一个新的binary log
show variables like ‘%gtid%’;
show master status;
insert into t1…
show master status;
此时gtid号没有变化

show binary logs;
查看最新的binary log位置
show binlog events in ‘最新的binary log’;

到从库上查看数据是否正常同步及gtid此时的状态：
show variables like ‘%gtid%’;
on_permissive 从此时处于可以处理gtid和非gtid事务的状态，主已经关闭gtid事务状态，现在将从也改成与主一致状态
从库：
set @@global.gtid_mode = off_permissive; 
show variables like ‘%gtid%’;

此时主从库都不会产生gtid，但可以处理gtid的事务状态

查看主从的gtid_owned是否为空：
select @@global.gtid_owned;

主从库；
set global gtid_mode=0;
set global enforce_gtid_consistency=0;
配置文件my.cnf也要修改

此时在此写数据测试，从库是否可以接收到日志，如果正常说明切换到传统复制正常


现在是改成由传统模式到gtid模式的过程：
主从都要：
set @@global.enforce_gtid_consistency=warn;
set @@global.enforce_gtid_consistency=1;
set @@gloabl.gtid_mode=off_permissive;

现在从库上执行，在在主库上：
set @@global.gtid_mode=on_premissive;
查看状态及复制状态

在master上：
flush logs;
show master status;
set @@global.gtid_mode = on_permissive; 
show master status; 
可以看出会产生一个新的binary log，同时gtid事务个数在不断变化

如果等于0说明都没有在传统复制模式下了：
show status like ‘ongoine_anonymouns_transaction_count’;
等于0后，在改成gtid复制,主从都要
set @@gloabl.gtid_mode=0;

slave:
stop salve;
change master to master_auto_position=1;
start salve;
查看状态是否正常

注意主从的配置文件要修改
