* * * * *  /bin/bash /service/etc/zabbix/bin/iostat.sh
cat /service/etc/zabbix/bin/iostat.sh 
iostat -x -d -m 1 3 >/service/tmp/iostat.txt

cat userparameter_diskio.conf 
UserParameter=diskio_discovery[*],python /service/etc/zabbix/bin/io_discovery.py
UserParameter=diskio[*],python /service/etc/zabbix/bin/userparameter_diskio.py  $1 $2

这个是zabbix里的那个diskio的配置文件

cat /service/etc/zabbix/bin/io_discovery.py 
#!/bin/env python
import os
import commands
(status,output) = commands.getstatusoutput("iostat -x -d -m  | sed -n '4,$p' | grep -v ^$|  awk '{print $1}'")
DISKS = output.split()
print '{'
print '\t"data":['
count = 1
for key in DISKS:
    print '\t{'
    if count < len(DISKS):
        print '\t\t"{#DISK}":"%s"},' % key
    else:
        print '\t\t"{#DISK}":"%s"}' % key
    count += 1
print '\t]'
print '}'

cat /service/etc/zabbix/bin/userparameter_diskio.py
#!/usr/bin/python
#_*_coding:utf-8_*_
#2017-7-25
#read iostat.txt 
import sys
import commands

input_one = sys.argv[1]
input_two = sys.argv[2]

...re_commands = 'cat /service/tmp/iostat.txt' + '|' +  'grep' + ' ' + input_one 
(status, output) = commands.getstatusoutput(re_commands) # get 1 column 

file_data = '/service/tmp/iostat_true.txt'
with open(file_data,'wb') as f:
    f.write(output)

file_list=[]
with  open(file_data,'r') as read_f:
    for i in read_f:
        file_list.append(i.split())

result_count=len(file_list)
result = []
for x in file_list:
    if input_two == 'rrqmps':
        result.append(float(x[1]))
    elif input_two == 'wrqmps':
        result.append(float(x[2]))
    elif input_two == 'rps':
        result.append(float(x[3]))
    elif input_two == 'wps':
        result.append(float(x[4]))
    elif input_two == 'rMBps':
        result.append(float(x[5]))
    elif input_two == 'wMBps':
        result.append(float(x[6]))
    elif input_two == 'avgrq-sz':
        result.append(float(x[7]))
    elif input_two == 'avgqu-sz':
        result.append(float(x[8]))
    elif input_two == 'await':
        result.append(float(x[9]))
    elif input_two == 'r_await':
        result.append(float(x[10]))
    elif input_two == 'w_await':
        result.append(float(x[11]))
    elif input_two == 'svctm':
        result.append(float(x[12]))
    elif input_two == 'util':
        result.append(float(x[13]))
    else:
        print('input err!')    
        break
if result != []:

    re_data = sum(result) / result_count
    print(re_data)

touch  /service/tmp/iostat_true.txt
chmod 777 /service/tmp/iostat_true.txt

