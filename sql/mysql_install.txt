su - root

# cat /etc/redhat-release 
CentOS Linux release 7.2.1511 (Core) 

# uname -rm
3.10.0-327.el7.x86_64 x86_64


## history
HISTSIZE=1200
export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE
export HISTCONTROL=ignoredups
export HISTFILE=$HOME/.bash_history
export HISTFILESIZE=1200
HISTTIMEFORMAT="`whoami` [%F %T] "
#export HISTTIMEFORMAT
#shopt -s histappend
#typeset -r PROMPT_COMMAND
#typeset -r HISTTIMEFORMAT


cat /etc/profile
## terminal ps1
zst_ps1()
{
    Date=$(date +%F)
    Time=$(date +%F_%H:%M:%S_%u)
    IP=$(/sbin/ip route get 1 | awk '{print $NF;exit}')

    PS1="\\n\e[1;37m[\e[m\]\[\e[1;32m\u\e[m\]\[\e[1;33m@\e[m\]\[\e[1;35m\h\e[1;36m $IP\e[m\e[1;37m \[\e[1;35m$Time \e[m\]\e[1;36m$(pwd)\e[m\e[1;37m]\e[m\n\\$ "
}

PROMPT_COMMAND=zst_ps1

## alias
alias vim=/usr/local/vim74/bin/vim
alias vi='vim'
alias grep='grep --color'
alias egrep='egrep --color'


## clean history
>~/.viminfo
>~/.mysql_history
>~/.bash_history
history -cw



yum -y install numactl libaio

mkdir -pv /mysqldata/inst1/{binlog,innodb_log,innodb_ts,log,relaylog,sock,tmpdir,outfiledir}

groupadd -g 2017 mysql
useradd -u 2017 -g mysql mysql
chown -R mysql.mysql /mysqldata

# cat /mysqldata/inst1/my.cnf
##=================================This is inst1 3306 my.cnf==================================

[client]
port = 3306
socket = /mysqldata/inst1/sock/mysql.sock
default-character-set = utf8
local-infile = 1


[mysqld]
##=================================Thread Level===================================
read_buffer_size = 256K
sort_buffer_size = 256K
read_rnd_buffer_size = 256K
join_buffer_size = 4M
thread_stack = 512K
thread_cache_size = 16
binlog_cache_size = 1M


##=================================Global===================================
## 禁用分区引擎查询
disable-partition-engine-check = 1

## 定义全局自动密码到期策略，0表示禁用自动密码到期
default_password_lifetime = 0

## 确定服务器是否为TIMESTAMP列中的默认值和NULL值处理启用某些非标准行为
## NO_ZERO_DATE
explicit_defaults_for_timestamp = 1

## innodb引擎关闭query cache功能，因为缓存要求比较苛刻，相当于每个连接都是新的连接，同时还要去缓存中查一次增加开销
query_cache_type = 0
query_cache_size = 0

## 用于索引块的缓冲区大小
key_buffer_size = 64M

## MySQL可以拥有的未连接请求数，不能设置为高于操作系统的限制
back_log = 300
ssl = 0
local-infile = 1

## 所有线程打开的表数，增加这个值相应的系统文件的描述符也要增加
## 可以通过检查opened_tables状态变量来检查是否需要增加表缓存；如果opened_tables值很大，并且不经常使用flush tables(这只是强制所有表关闭并重新打开)，
## 那么应该增加table_open_cache变量的值
table_open_cache = 8192

## 最大连接数和连接错误数
max_connections = 500
max_connect_errors = 1000000000000000

## 下面2个参数:
#1.如果连库的程序是PHP这类，一般是短连接，保持300秒就可以，可以根据实际环境调整
#2.如果连库的程序是java、C、C++、node.js这类，一般都是长连接，要跟开发确认下程序是否开启线程池，一般3600秒，可以根据实际环境调整
#3.短链接与长连接区别：
#  a.程序与MySQL建立短连接，短连接在没有数据传输时就直接关闭了，需要频繁建立销毁连接，php使用长连接可能导致数据库的连接数超过限制或内存占用过多
#  b.程序与MySQL建立长连接，可以重复利用长连接，减少建立销毁连接的开销，同时需要专门的线程来负责维护长连接的状态
wait_timeout = 300
interactive_timeout = 300
connect_timeout = 60
net_read_timeout = 60
port = 3306
tmpdir = /mysqldata/inst1/tmpdir
datadir = /mysqldata/inst1/mydata
socket = /mysqldata/inst1/sock/mysql.sock
pid-file = /mysqldata/inst1/sock/mysql.pid
secure-file-priv = /mysqldata/inst1/outfiledir
lower_case_table_names = 1

## 字符集和字段字符集一般保持下面这2个通用即可
character_set_server = utf8
collation-server = utf8_general_ci
skip-external-locking
skip-name-resolve = 1
max_allowed_packet = 16M
tmp_table_size = 128M


##=================================Logs Related Settings===================================
#general_log = ON
#general_log_file = /mysqldata/inst1/log/general.log
log-error = /mysqldata/inst1/log/error.log
slow_query_log = 1
long_query_time = 3

## 记录没有使用索引的SQL
log_queries_not_using_indexes = 1

## 如果启用了log_queries_not_using_indexes = 1，则会限制每分钟可以写入慢查询的查询数，0表示无限制
log_throttle_queries_not_using_indexes = 5

## 检查少于此行数的查询不会记录到慢查询日志中
min_examined_row_limit = 100

slow_query_log_file = /mysqldata/inst1/log/slow-query.log
log-bin-index = /mysqldata/inst1/binlog/mysql-bin.index
log-bin = /mysqldata/inst1/binlog/mysql-bin
max_binlog_size = 200M

## 事务级别在RC or RU模式下，从5.7.7版本开始ROW模式是默认的，改成STATEMENT格式不能正常使用DML语句;
## MIXED = ROW + STATEMENT，既然STATEMENT不支持了，因此也就没有必要使用MIXED格式
binlog-format = ROW
relay-log-index = /mysqldata/inst1/relaylog/mysql-relay-bin.index
relay-log = /mysqldata/inst1/relaylog/mysql-relay-bin
expire_logs_days = 7


##=================================Replication Related Settings===================================
server-id = 100163306

## GTID
#gtid_mode = ON
#enforce-gtid-consistency = 1

## 双主单活的话，下面4个参数，每个实例2个
#$auto_increment_increment = 2
#$auto_increment_offset = 1
##auto_increment_increment = 2
##auto_increment_offset = 2

log_slave_updates = 1
relay_log_recovery = 1
relay_log_purge = 1

## 双1 保证数据不丢 innodb_flush_log_at_trx_commit = 1
sync_binlog = 1

## 1：表示不会存储的函数创建实施0的限制
log_bin_trust_function_creators = 1
slave_compressed_protocol = 1
slave-skip-errors = 1022,1032,1062
slave_parallel_workers = 4
slave-net-timeout = 10
net_retry_count = 3

## 如果使用GTID模式的主从复制，则建议如果主从出了问题或重启MySQL后不要自动进行主从同步
#skip-slave-start

## 仅作为从库可以开启
#read_only = 1


##=================================Innodb Specific Options===================================
## 存储引擎和事务隔离级别
default-storage-engine = InnoDB
transaction_isolation = READ-COMMITTED

## 使用独立表空间.ibd(表的数据+表的索引)
innodb_file_per_table = 1

## 指定MySQL一次可以保持打开的.ibd文件的最大数量，当使用多个innodb表空间(innodb_file_per_table,即开启独立表空间)此参数才会有效
## 最小值为10，如果未使用独立表空间，默认值为300；否则大于300 and table_open_cache = 8192
innodb_open_files = 8192

## 双1
innodb_flush_log_at_trx_commit = 1

## innodb buffer pool 大小根据内存大小和物理机器上部署实例和业务负载情况调整
## 单实例，为内存的50%-70%
innodb_buffer_pool_size = 5G
innodb_buffer_pool_instances = 4

## innodb threads
innodb_read_io_threads = 8
innodb_write_io_threads = 8
innodb_purge_threads = 8

## innodb lock 等待超时时间
innodb_lock_wait_timeout = 60

## 定义用于将数据刷新到innodb数据文件(.ibd)和日志文件(ib_logfile[0-9])的方法,不同的方法会影响I/O吞吐量
## O_DIRECT方法：innodb使用此方法打开数据文件，并使用操作系统的fsync()方法来刷新内存中的数据到disk上的数据文件和日志文件
innodb_flush_method = O_DIRECT

## innodb尝试从缓冲池中(innodb_buffer_pool)刷新数据到disk上的数据文件(.ibd)，以使脏页面的百分比不超过设置的值，如85%
innodb_max_dirty_pages_pct = 85
innodb_fast_shutdown = 1

## innodb 关闭模式
#  0：innodb在关闭之前执行缓慢关闭，完全清除和更改缓冲区合并，这种方式关闭最安全，时间可能会很久(几分钟或几个小时)
#  1：innodb在关闭之前跳过0的操作
#  2：innodb会刷新日志并关闭冷却，相当于MySQL已经崩溃;没有提交的事务会丢失，但崩溃恢复操作使下次启动需要更长的时间
innodb_force_recovery = 0

## 系统表空间
innodb_data_home_dir = /mysqldata/inst1/innodb_ts
innodb_data_file_path = ibdata1:100M:autoextend

## redo log
innodb_log_group_home_dir = /mysqldata/inst1/innodb_log
innodb_log_file_size = 512M
innodb_log_buffer_size = 16M
innodb_log_files_in_group = 3

## undo log 从系统表空间ibdata1中分离出来，方便后面空间收缩等
innodb_undo_directory = /mysqldata/inst1/undo_ts
innodb_undo_log_truncate = 1
innodb_purge_rseg_truncate_frequency = 32
innodb_undo_tablespaces = 4
innodb_undo_logs = 128
innodb_max_undo_log_size = 4G


[mysql]
no-auto-rehash


[mysqldump]
quick
max_allowed_packet = 128M



wget https://www.percona.com/downloads/Percona-Server-LATEST/Percona-Server-5.7.18-15/binary/tarball/Percona-Server-5.7.18-15-Linux.x86_64.ssl101.tar.gz
tar zxvf Percona-Server-5.7.18-15-Linux.x86_64.ssl101.tar.gz -C /usr/local/
ln -s /usr/local/Percona-Server-5.7.18-15-Linux.x86_64.ssl101 /usr/local/mysql
chown -R mysql.mysql /mysqldata /usr/local/Percona-Server-5.7.18-15-Linux.x86_64.ssl101 /usr/local/mysql

su - mysql


cat .bash_profile
## mysql home
export MYSQL_HOME=/usr/local/mysql
export PATH=$MYSQL_HOME/bin:$HOME/bin:$PATH


## process
alias mylist="ps ux | grep 'bin/mysqld' | grep 'socket' | awk -F '[ =  ]*' '{print \$27\"  \"\$10,\$3,\$4,\$13,\$25,\$17,\$2}' | sort"


## inst1 3306
alias inst1_startup='mysqld_safe --defaults-file=/mysqldata/inst1/my.cnf &'
alias inst1_shutdown='mysqladmin shutdown -usys -p --socket=/mysqldata/inst1/sock/mysql.sock;echo;mylist'
alias inst1_login='mysql -uroot -p --socket=/mysqldata/inst1/sock/mysql.sock'
alias inst1_log='tailf /mysqldata/inst1/log/error.log'


## mysql PS1
IP=$(/sbin/ip route get 1 | awk '{print $NF;exit}')
alias colormysql=$(echo -e 'mysql --prompt="[\x1B[1;31m\\c \x1B[1;32m\\u\x1B[1;33m@\x1B[1;35m\\h\e[1;36m $IP:\x1B[1;32m\\p \x1B[1;35m$(date +%F)_\R:\m:\s \x1B[1;36m(\\d)\x1B[0m]\nSQL> "')
alias inst1_login="colormysql -uroot -p -P3306 -h 127.0.0.1 --socket=/mysqldata/inst1/sock/mysql.sock"

source .bash_profile

/usr/local/mysql/bin/mysqld --defaults-file=/mysqldata/inst1/my.cnf --initialize --initialize-insecure --explicit_defaults_for_timestamp --basedir=/usr/local/mysql --datadir=/mysqldata/inst1/mydata --user=mysql

inst1_startup
inst1_log


mysql -uroot --socket=/mysqldata/inst1/sock/mysql.sock

create user if not exists 'root'@'localhost' identified by '123' password expire never;
grant all privileges on *.* to 'root'@'localhost' with grant option;

create user if not exists 'root'@'127.0.0.1' identified by '123' password expire never;
grant all privileges on *.* to 'root'@'127.0.0.1' with grant option;
flush privileges;

delete from mysql.user where user='root' or user='mysql.sys';
select user,host,authentication_string from mysql.user;




