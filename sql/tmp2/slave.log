percona 5.6.20 row gtid： 中继日志无法解析，服务器出现异常宕机 && mysqld自动重启(rpm安装)

Last_SQL_Errno: 1594
Last_SQL_Error: Relay log read failure: Could not parse relay log event entry. The possible reasons are: the master's binary log is corrupted (you can check this by running 'mysqlbinlog' on the binary log), the slave's relay log is corrupted (you can check this by running 'mysqlbinlog' on the relay log), a network problem, or a bug in the master's or slave's MySQL code. If you want to check the master's binary log or slave's relay log, you will be able to know their names by issuing 'SHOW SLAVE STATUS' on this slave.

$ perror 1594
MySQL error code 1594 (ER_SLAVE_RELAY_LOG_READ_FAILURE): Relay log read failure: %s


# mysqlbinlog -vvv --base64-output=decode-rows mysql-relay-bin.002465 > 2465.sql
ERROR: Error in Log_event::read_log_event(): 'read error', data_len: 840, event_type: 29
ERROR: Could not read entry at offset 58748687: Error in log format or read error.

# mysqlbinlog -vvv --base64-output=decode-rows mysql-relay-bin.002466 > 2466.sql -- 正常解析

$ vim client/mysqlbinlog.cc +2505                    
2446 typedef Basic_binlog_file_reader<
2447     Mysqlbinlog_ifile, Mysqlbinlog_event_data_istream,
2448     Binlog_event_object_istream, Default_binlog_event_allocator>
2449     Mysqlbinlog_file_reader;
2450 
2451 /**
2452   Reads a local binlog and prints the events it sees.
2453 
2454   @param[in] logname Name of input binlog.
2455 
2456   @param[in,out] print_event_info Parameters and context state
2457   determining how to print.
2458 
2459   @retval ERROR_STOP An error occurred - the program should terminate.
2460   @retval OK_CONTINUE No error, the program should continue.
2461   @retval OK_STOP No error, but the end of the specified range of
2462   events to process has been reached and the program should terminate.
2463 */
2464 static Exit_status dump_local_log_entries(PRINT_EVENT_INFO *print_event_info,
2465                                           const char *logname) {
2466   Exit_status retval = OK_CONTINUE;
2467 
2468   ulong max_event_size = 0;
2469   mysql_get_option(NULL, MYSQL_OPT_MAX_ALLOWED_PACKET, &max_event_size);
2470   Mysqlbinlog_file_reader mysqlbinlog_file_reader(opt_verify_binlog_checksum,
2471                                                   max_event_size);
2472 
2473   Format_description_log_event *fdle = nullptr;
2474   if (mysqlbinlog_file_reader.open(logname, start_position, &fdle)) {
2475     error("%s", mysqlbinlog_file_reader.get_error_str());
2476     return ERROR_STOP;
2477   }
2478 
2479   if (fdle != nullptr) {
2480     retval = process_event(print_event_info, fdle,
2481                            mysqlbinlog_file_reader.event_start_pos(), logname);
2482     if (retval != OK_CONTINUE) goto end;
2483   }
2484 
2485   if (strcmp(logname, "-") == 0)
2486     mysqlbinlog_file_reader.event_data_istream()->set_multi_binlog_magic();
2487 
2488   for (;;) {
2489     char llbuff[21];
2490     my_off_t old_off = mysqlbinlog_file_reader.position();
2491 
2492     Log_event *ev = mysqlbinlog_file_reader.read_event_object();
2493     if (ev == NULL) {
2494       /*
2495         if binlog wasn't closed properly ("in use" flag is set) don't complain
2496         about a corruption, but treat it as EOF and move to the next binlog.
2497       */
2498       if ((mysqlbinlog_file_reader.format_description_event()->header()->flags &
2499            LOG_EVENT_BINLOG_IN_USE_F) ||
2500           mysqlbinlog_file_reader.get_error_type() ==
2501               Binlog_read_error::READ_EOF)
2502         goto end;
2503 
2504       error(
2505           "Could not read entry at offset %s: "
2506           "Error in log format or read error 1.",
2507           llstr(old_off, llbuff));
2508       error("%s", mysqlbinlog_file_reader.get_error_str());
2509       goto err;
2510     }
2511     if ((retval = process_event(print_event_info, ev, old_off, logname)) !=
2512         OK_CONTINUE)
2513       goto end;
2514   }
2515 
2516   /* NOTREACHED */
2517 
2518 err:
2519   retval = ERROR_STOP;
2520 
2521 end:
2522   return retval;
2523 }


[OK]
25497681 # at 90972431
25497682 #190918 18:00:02 server id 1134312  end_log_pos 149718164 CRC32 0x24f2a081      Xid = 1535364575
25497683 COMMIT/*!*/;
25497684 SET @@SESSION.GTID_NEXT= 'AUTOMATIC' /* added by mysqlbinlog */ /*!*/;
25497685 # at 90972462
25497686 #190918 16:00:16 server id 70054312  end_log_pos 90972515 CRC32 0x78c03ea1      Rotate to mysql-relay-bin.002468  pos: 4
25497687 DELIMITER ;
25497688 # End of log file
25497689 ROLLBACK /* added by mysqlbinlog */;
25497690 /*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION_TYPE*/;
25497691 /*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE=0*/;


[problem]
2600132 COMMIT/*!*/;
2600133 # at 58748563
2600134 #190918 15:38:10 server id 1134312  end_log_pos 58748441 CRC32 0x21889a5e       GTID [commit=yes]
2600135 SET @@SESSION.GTID_NEXT= '2f95ae0b-8816-11e4-bf96-c81f66be0cd9:127721348'/*!*/;
2600136 # at 58748611
2600137 #190918 15:38:10 server id 1134312  end_log_pos 58748517 CRC32 0x5d6f90c3       Query   thread_id=48444395      exec_time=0     error_code=0
2600138 SET TIMESTAMP=1568792290/*!*/;
2600139 BEGIN
2600140 /*!*/;
2600141 DELIMITER ;
2600142 # End of log file
2600143 ROLLBACK /* added by mysqlbinlog */;
2600144 /*!50003 SET COMPLETION_TYPE=@OLD_COMPLETION_TYPE*/;
2600145 /*!50530 SET @@SESSION.PSEUDO_SLAVE_MODE=0*/;


BEGIN; 缺少COMMIT，猜测事务不完整导致无法解析
GTID [commit=yes]
GTID_NEXT= 'AUTOMATIC'
